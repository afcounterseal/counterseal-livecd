[[!meta title="System administrators"]]

[[!toc levels=2]]

<a id="goals"></a>

# Goals

The Tails system administrators set up and maintain the infrastructure
that supports the development and operations of Tails. We aim at
making the life of Tails contributors easier, and to improve the quality of
the Tails releases.

<a id="principles"></a>

# Principles

## Infrastructure as code

We want to treat system administration like a (free) software
development project:

* We want to enable people to participate without needing an account
  on the Tails servers.
* We want to review the changes that are applied to our systems.
* We want to be able to easily reproduce our systems via
  automatic deployment.
* We want to share knowledge with other people.

This is why we try to publish as much as possible of our systems
configuration, and to manage our whole infrastructure with
configuration management tools. That is, without needing to log
into hosts.

## Free Software

We use Free Software, as defined by the [Debian Free Software
Guidelines](https://www.debian.org/social_contract#guidelines).  
The firmware our systems might need are the only exception to
this rule.

## Relationships with upstream

The [[principles used by the broader Tails
project|contribute/relationship_with_upstream]] also apply for
system administration.

<a id="duties"></a>

# Duties

## In general

As said above, "set up and maintain the infrastructure". This implies
for example:

* dealing with hardware purchase, upgrades and failures;
* upgrading our systems to a new version of Debian.

## During sysadmin shifts

* create Git repositories when requested
* update access control lists to resources we manage, as requested by
  the corresponding teams
* keep systems up-to-date, reboot them as needed
* keep Jenkins plugins up-to-date:
  [[upgrade policy|sysadmins/Jenkins#upgrade-policy]]
* act as the de facto interface between Tails and the people hosting
  our services (boum.org, immerda.ch) for non-trivial requests
* when a sysadmin shift includes the beginning of a yearly quarter, ensure that
  sysadmin shifts are filled and agreed on for the next two quarters
* quarterly: self-evaluate our work and report to the -summit@ mailing list
* When the deadline for taking over a given maintenance task (see
  below) has passed, the sysadmin on duty must make it clear sÂ·he's
  handling the problem before starting to work on it, in order to
  avoid work duplication.
* Process GitLab abuse reports.

## Outside of sysadmin shifts

* Read email at least twice a week to check if the sysadmin currently
  on duty needs help.

* Once 48 hours have passed after a problem was identified, the
  sysadmins not currently on duty can/should take over maintenance
  tasks if the on duty sysadmin is MIA; for critical problems this
  delay shall be reduced.


<a id="tools"></a>

# Tools

The main tools used to manage the Tails infrastructure are:

* [Debian](https://www.debian.org/) GNU/Linux; in the vast majority of
  cases, we run the current stable release
* [Puppet](http://projects.puppetlabs.com/projects/puppet),
  a configuration management system
  - our [[Puppet code|contribute/git#puppet]]
* [Git](http://git-scm.com/) to host and deploy configuration,
  including our Puppet code

Sysadmins can login to all hosts and have write access to the Puppet masters'
Git repositories.

<a id="communication"></a>

# Communication

In order to get in touch with Tails sysadmins, you can:

* Create an issue in the [[!tails_gitlab tails/sysadmin]] project
* Ping all sysadmins anywhere in our [[!tails_gitlab desc="GitLab"]] by mentioning the `@sysadmin-team` group
* See if one of us is on shift in [[one of our chat rooms|about/contact#chat]]
* Send an e-mail to [[the sysadmin's mailing list|about/contact#tails-sysadmins]]

The following lists of issues are also of interest to sysadmins:

* [[!tails_gitlab
  groups/tails/-/issues?label_name%5B%5D=Core+Work%3ASysadmin
  desc="issues that should be taken care of as part of sysadmin shifts
  or are on the sysadmin team's roadmap"]]
* [[!tails_gitlab
  groups/tails/-/issues?label_name%5B%5D=C%3AInfrastructure
  desc="tasks that belong to the *Infrastructure* category"]]

<a id="services"></a>

# Services

Below, importance level is evaluated based on:

* users' needs: e.g. if the APT repository is down, then the
  _Additional Software_ feature is broken;
* developers' needs: e.g. if the ISO build fails, then developers
  cannot work;
* the release process' needs: we want to be able to do an emergency
  release at any time when critical security issues are published.
  Note that in order to release Tails, one needs to first build Tails,
  so any service that's needed to build Tails is also needed to release Tails.

## APT repositories

<a id="custom-apt-repository"></a>

### Custom APT repository

* purpose: host Tails-specific Debian packages
* [[documentation|contribute/APT repository/custom]]
* access: anyone can read, Tails core developers can write
* tools: [[!debpts reprepro]]
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/reprepro/custom.pp
    desc="`tails::reprepro::custom` class"]]
  - signing keys are managed with the `tails_secrets_apt` Puppet module
* importance: critical (needed by users, and to build & release Tails)

### Time-based snapshots of APT repositories

* purpose: host full snapshots of the upstream APT repositories we
  need, which provides the freezable APT repositories feature needed
  by the Tails development and QA processes
* [[documentation|contribute/APT repository/time-based snapshots]]
* access: anyone can read, release managers have write access
* tools: [[!debpts reprepro]]
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/reprepro/snapshots/time_based.pp
    desc="`tails::reprepro::snapshots::time_based` class"]]
  - signing keys are managed with the `tails_secrets_apt` Puppet module
* importance: critical (needed to build Tails)

### Tagged snapshots of APT repositories

* purpose: host partial snapshots of the upstream APT repositories we
  need, for historical purposes and compliance with some licenses
* [[documentation|contribute/APT repository/tagged snapshots]]
* access: anyone can read, release managers can create and publish new
  snapshots
* tools: [[!debpts reprepro]]
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/reprepro/snapshots/tagged.pp
    desc="`tails::reprepro::snapshots::tagged` class"]]
  - signing keys are managed with the `tails_secrets_apt` Puppet module
* importance: critical (needed by users and to release Tails)

## Bitcoind

* purpose: handle the Tails Bitcoin wallet
* access: Tails core developers only
* tools: [[!debpts bitcoind]]
* configuration:
  [[!tails_gitlab tails/puppet-bitcoind/-/blob/master/manifests/init.pp
  desc="`bitcoind` class"]]
* Vcs-Git: [[!tails_gitweb_repo bitcoin]] and [[!tails_gitweb_repo libunivalue]]
* importance: medium
* To save disk space: as the `bitcoin@bitcoin.lizard` user, run
  `bitcoin-cli getblockcount` to get the ID of the last block,
  then run `bitcoin-cli pruneblockchain XYZ`, with `XYZ` being
  a Unix timestamp that's at least 5 months in the past.

## BitTorrent

* purpose: seed the new ISO image when preparing a release
* [[documentation|contribute/release_process]]
* access: anyone can read, Tails core developers can write
* tools: [[!debpts transmission-daemon]]
* configuration: done by hand ([[!tails_ticket 6926]])
* importance: low

## DNS

* purpose: authoritative nameserver for the `tails.boum.org` and
  `amnesia.boum.org` zones
* access:
  - anyone can query this nameserver
  - members of the mirrors team control some of the content of the
    `dl.amnesia.boum.org` sub-zone
  - Tails sysadmins can edit the zones with `pdnsutil edit-zone`
* tools: [[!debpts pdns]] with its MySQL backend
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/pdns.pp
    desc="`tails::pdns` class"]]
    and [[!tails_gitlab tails/puppet-tails/-/tree/master/manifests/pdns
    desc="`tails::pdns::*` resources"]]
  - [`powerdns` Puppet module](https://github.com/sensson/puppet-powerdns)
* importance: critical (most of our other services are not available
  if this one is not working)

<a id="gitlab"></a>

## GitLab

* purpose:
  - host Tails issues
  - host most Tails [[Git repositories|contribute/git]]
* access: public + some data with more restricted access
* operations documentation: [[contribute/working_together/roles/sysadmins/GitLab]]
* end-user documentation: [[contribute/working_together/GitLab]]
* configuration:
  - immerda hosts our GitLab instance using [this Puppet
    code](https://code.immerda.ch/immerda/ibox/puppet-modules/-/blob/master/ib_gitlab/manifests/instance.pp).
  - We don't have shell access.
  - Tails system administrators have administrator credentials inside GitLab.
  - Groups, projects, and access control:
     - [[high-level documentation|working_together/GitLab#access-control]]
     - configuration: [[!tails_gitlab tails/gitlab-config]]
* importance: critical (needed to release Tails)
* Tails system administrators administrate this GitLab instance.
* See our [[documentation about GitLab for Tails sysadmins|contribute/working_together/roles/sysadmins/GitLab]].

## Gitolite

* purpose:
  - host Git repositories used by the puppetmaster and other services
  - host mirrors of various Git repositories needed on lizard,
    and whose canonical copy lives on GitLab
* access: Tails core developers only
* tools: [[!debpts gitolite3]]
* configuration:
  [[!tails_gitweb_puppet_tails manifests/gitolite.pp
  desc="`tails::gitolite` class"]]
* importance: high (needed to release Tails)

## git-annex

* purpose: host the full history of Tails released images and Tor
  Browser tarballs
* access: Tails core developers only
* tools: [[!debpts git-annex]]
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/git_annex.pp
    desc="`tails::git_annex` class"]]
  - [[!tails_gitweb_puppet_tails manifests/gitolite.pp
    desc="`tails::gitolite` class"]]
  - [[!tails_gitweb_puppet_tails manifests/git_annex/mirror.pp
    desc="`tails::git_annex::mirror` defined resource"]]
* importance: high (needed to release Tails)

<a id="icinga2"></a>

## Icinga2

* purpose: Monitor Tails online services and systems.
* access: only Tails core developers can read-only the Icingaweb2 interface,
  sysadmins are RW and receive notifications by email.
* setup: We have one Icinga2 instance installed on a dedicated system
  used as the master of all our Icinga2 zones. We use a VM on the other
  bare-metal host as the Icinga2 satellite of our master. Icinga2 agents are
  installed on every other VM and the host itself. They report back to
  the satellite, which transmits to the master. We spread the Icinga2
  configuration with Puppet. This way, we achieve a certain isolation
  where the master or the satellite have no right to configure agents or
  run arbitrary commands on them.
* tools: [[!debpts icinga2 desc="Icinga2"]], [[!debpts icingaweb2]]
* configuration:
  - master:
    * [[!tails_gitweb_puppet_tails manifests/monitoring/master.pp
      desc="`tails::monitoring::master` class"]].
    * some configuration in the ecours.tails.boum.org node manifest.
    * See Vpn section.
  - web server:
    * [[!tails_gitweb_puppet_tails manifests/monitoring/icingaweb2.pp
      desc="`tails::monitoring::icingaweb2` class"]],
      that wraps around [upstream `icingaweb2` module](https://git.icinga.org/puppet-icingaweb2.git).
    * some configuration in the ecours.tails.boum.org node manifest.
  - satellite:
    * [[!tails_gitweb_puppet_tails manifests/monitoring/satellite.pp
      desc="`tails::monitoring::satellite` class"]]
  - agents:
    * [[!tails_gitweb_puppet_tails manifests/monitoring/agent.pp
      desc="`tails::monitoring::agent` class"]]
  - private keys are managed with the `tails_secrets_monitoring` Puppet module
* documentation:
  - [[How to add checks to our monitoring setup|roles/sysadmins/adding_icinga2_checks]]
* importance: critical (needed to ensure that other, critical services are working)

## Internal XMPP service

* purpose: an internal XMPP service that can be used by Tails developers and some contributors.
* access: at the moment everyone that is on the tails-summit mailinglist has and/or can
  request an account.
* tools: prosody
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/prosody.pp
    desc="`tails::prosody` class"]]
* importance: low

<a id="Jenkins"></a>

## Jenkins

* purpose: continuous integration, e.g. build Tails ISO images from
  source and run test suites
* access: only Tails core developers can see the Jenkins web interface
  ([[!tails_ticket 6270]]); anyone can [[download the built
  products|contribute/how/testing]]
* tools: [[!debpts jenkins desc="Jenkins"]], [[!debpts jenkins-job-builder]]
* design and implementation documentation: [[sysadmins/Jenkins]]
* importance: critical (as a key component of our development process,
  needed to build IUKs during a Tails release)

## Mail

* purpose: handle incoming and outgoing email for some of our
  [[Schleuder lists|sysadmins#schleuder]]
* access: public MTA listening on `mail.tails.boum.org`
* tools: [[!debpts postfix]], [[!debpts amavisd-new]], [[!debpts spamassassin]]
* configuration:
  [[!tails_gitweb_puppet_tails manifests/postfix.pp
  desc="`tails::postfix`"]],
  [[!tails_gitweb_puppet_tails manifests/amavisd_new.pp
  desc="`tails::amavisd_new`"]],
  and
  [[!tails_gitweb_puppet_tails manifests/spamassassin.pp
  desc="`tails::spamassassin`"]]
  classes
* importance: high (at least because WhisperBack bug reports go through this MTA)

<a id="meeting-reminder"></a>

## Meeting reminder

* purpose: send email reminders, for example about upcoming meetings
* access: not applicable
* configuration:
  - to add a new reminder, or modify an existing one:
    - [[!tails_gitweb_puppet_tails manifests/meeting/reminders.pp
      desc="`tails::meeting::reminders`"]]
    - [[!tails_gitlab tails/puppet-tails/-/tree/master/files/meeting
      desc="email templates"]]
  - implementation:
    [[!tails_gitweb_puppet_tails manifests/meeting.pp
    desc="`tails::meeting`"]],
    [[!tails_gitweb_puppet_tails manifests/meeting/reminder.pp
    desc="`tails::meeting::reminder`"]],
    and
    [[!tails_gitweb_puppet_tails files/meeting/meeting.py
    desc="`meeting.py` script"]]
* importance: to be defined

<a id="mumble"></a>

## Mumble

* purpose: internal communication for some internal teams
* access: members of some internal teams
* tools: [[!debpts mumble-server]]
* configuration:
  - <https://github.com/voxpupuli/puppet-mumble>
  - `mumble::*` parameters in Hiera
* importance: low

<a id="rsync"></a>

## rsync

* purpose: provide content to the public rsync server, from which all
  HTTP mirrors in turn pull
* access: read-only for those who need it, read-write for Tails core
  developers
* tools: [[!debpts rsync]]
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/rsync.pp
    desc="`tails::rsync`"]]
  - users and credentials are managed with the `tails_secrets_rsync`
    Puppet module
* importance: critical (needed to release Tails)

<a id="schleuder"></a>

## Schleuder

* purpose: host some of our Schleuder mailing lists
* access: anyone can send email to these lists
* tools: [[!debpts schleuder]]
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/schleuder.pp
    desc="`tails::schleuder` class"]]
  - `tails::schleuder::lists` Hiera setting
* importance: high (at least because WhisperBack bug reports go through this service)

## Tor bridge

* purpose: provide a Tor bridge that Tails contributors can easily use
  for testing
* access: anyone who gets it from
  [BridgeDB](https://bridges.torproject.org/)
* tools: [[!debpts tor]], [[!debpts obfs4proxy]]
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/apt/repository/torproject.pp
    desc="`tails::apt::repository::torproject`"]]
  - [[!tails_gitlab tails/puppet-tor/-/blob/master/manifests/daemon/relay.pp
    desc="`tor::daemon::relay`"]]
* importance: low

## VPN

* purpose: flow through VPN traffic the connections between our
  different remote systems. Mainly used by the monitoring service.
* access: private network.
* tools: [[!debpts tinc]]
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/vpn/instance.pp
    desc="`tails::vpn::instance` class"]]
* importance: transitively critical (as a dependency of our monitoring system)

## Web server

* purpose: serve web content for any other service that need it
* access: depending on the service
* tools: [[!debpts nginx]]
* configuration:
  - [[!tails_gitlab tails/puppet-nginx/-/blob/master/manifests/init.pp
    desc="`nginx` class"]]
* importance: transitively critical (as a dependency of Jenkins
  and APT repositories)

<a id="weblate"></a>

## Weblate

* URL: <https://translate.tails.boum.org/>
* purpose: web interface for translators
* [[design documentation|contribute/design/translation_platform]]
* [[usage documentation|contribute/how/translate/with_translation_platform]]
* admins: to be defined ([[!tails_ticket 17050]])
* tools: [Weblate](https://weblate.org/)
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/weblate.pp
    desc="`tails::weblate` class"]]
* importance: to be defined

## WhisperBack relay

* purpose: forward bug reports sent with WhisperBack to <tails-bugs@boum.org>
* access: public; WhisperBack (and hence, any bug reporter) uses it
* tools: [[!debpts postfix desc="Postfix"]]
* configuration:
  - [[!tails_gitweb_puppet_tails manifests/whisperback/relay.pp
    desc="`tails::whisperback::relay` class"]]
  - private keys are managed with the `tails_secrets_whisperback`
    Puppet module
* importance: high

# Other pages

[[!map pages="contribute/working_together/roles/sysadmins/*"]]
