#!/usr/bin/env python3

import argparse
import logging
import os
from pathlib import Path
from gi.repository import GLib, Gio

from tps import DBUS_SERVICE_NAME
from tps.service import Service

logger = logging.getLogger(__name__)

mainloop = GLib.MainLoop()
service = None


def on_bus_acquired(connection: Gio.DBusConnection, name: str) -> None:
    logger.info(f"Connected to the system bus")
    # Start the service
    global service
    service = Service(connection, mainloop)
    service.start()


def on_name_acquired(connection: Gio.DBusConnection, name: str) -> None:
    logger.info(f"Acquired name {name} on the system bus")


def on_name_lost(connection: Gio.DBusConnection, name: str) -> None:
    if not service:
        logger.error(f"Failed to acquire name {name} on the system bus")
    else:
        logger.info(f"Lost name {name} on the system bus, terminating...")
    # Quit the main loop, which causes our main thread to exit
    mainloop.quit()


def main():
    # Parse arguments
    parser = argparse.ArgumentParser()
    parser.add_argument("--debug", action="store_true")
    args = parser.parse_args()

    # Set up logging
    debug = args.debug or \
            os.getenv("DEBUG") or \
            "debug" in Path("/proc/cmdline").read_text().split()
    log_level = logging.DEBUG if debug else logging.INFO
    log_format = \
        "%(levelname)s:%(filename)s:%(lineno)d: %(message)s"
    logging.basicConfig(level=log_level,
                        format=log_format)

    bus_id = Gio.bus_own_name(
        Gio.BusType.SYSTEM,
        DBUS_SERVICE_NAME,
        Gio.BusNameOwnerFlags.ALLOW_REPLACEMENT |
        Gio.BusNameOwnerFlags.REPLACE,
        on_bus_acquired,
        on_name_acquired,
        on_name_lost,
    )

    # Run the mainloop until it gets terminated or we get a keyboard
    # interrupt
    try:
        logger.debug("Entering main event loop")
        mainloop.run()
    except KeyboardInterrupt:
        logger.info("Received SIGINT, exiting main event loop")
        mainloop.quit()

    if bus_id:
        Gio.bus_unown_name(bus_id)


if __name__ == '__main__':
    main()
