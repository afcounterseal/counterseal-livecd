#!/usr/bin/env python3

# Parts of this script are based on GNOME Music
# https://gitlab.gnome.org/GNOME/gnome-music
# Licensed under GPLv2 by the GNOME Music developers

import argparse
import os
from pathlib import Path
from gi.repository import Gio

# Connect to the system bus as root
bus = Gio.bus_get_sync(Gio.BusType.SYSTEM, None)  # type: Gio.DBusConnection

# Drop privileges
os.setgid(1000)
os.setuid(1000)

# Import other packages
import locale
import logging
import gettext
import gi
import signal
import sys

gi.require_version("Gtk", "3.0")
from gi.repository import Gtk

from tps_frontend.application import Application

LOCALE_DIR = "/usr/share/locale"
TRANSLATION_DOMAIN = "tails"

def set_exception_hook():
    """Configures sys.excepthook to enforce Gtk application exiting."""

    def new_hook(etype, evalue, etb):
        old_hook(etype, evalue, etb)
        while Gtk.main_level():
            Gtk.main_quit()
        sys.exit()

    old_hook = sys.excepthook
    sys.excepthook = new_hook

def set_internationalization():
    """Sets application internationalization."""
    locale.bindtextdomain(TRANSLATION_DOMAIN, LOCALE_DIR)
    locale.textdomain(TRANSLATION_DOMAIN)
    gettext.bindtextdomain(TRANSLATION_DOMAIN, LOCALE_DIR)
    gettext.textdomain(TRANSLATION_DOMAIN)

def main():
    # Parse arguments
    parser = argparse.ArgumentParser()
    parser.add_argument("--debug", action="store_true")
    args = parser.parse_args()

    # Set up logging
    debug = args.debug or \
            os.getenv("DEBUG") or \
            "debug" in Path("/proc/cmdline").read_text().split()
    log_level = logging.DEBUG if debug else logging.INFO
    log_format = \
        "%(levelname)s:%(filename)s:%(lineno)d: %(message)s"
    logging.basicConfig(level=log_level,
                        format=log_format)

    # XXX: tails-additional-software uses the --force_enable_preset
    # flag, which we currently don't implement. Either we have to
    # implement it, which would have security implications (any process
    # which can execute /usr/local/bin/tps-frontend-wrapper can enable
    # arbitrary features) or find a different solution to allow
    # tails-additional-software to enable itself.

    set_exception_hook()
    set_internationalization()
    app = Application(bus)
    signal.signal(signal.SIGINT, signal.SIG_DFL)

    return app.run()


if __name__ == '__main__':
    main()
